image: docker:latest

variables:
  IMAGE_TAG_LATEST: $CI_REGISTRY_IMAGE:latest
  IMAGE_TAG_CURRENT: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA

stages:
  - build
  - test
  - publish

build:
  state: build
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - docker build --cache-from $IMAGE_TAG_LATEST -t $IMAGE_TAG_LATEST .
    - docker tag $IMAGE_TAG_LATEST $IMAGE_TAG_CURRENT
    - docker push $IMAGE_TAG_CURRENT
    - docker push $IMAGE_TAG_LATEST
  tags:
    - docker

unit: 
  stage: test
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker rm -f unit-$CI_COMMIT_SHA || true
  script:
    - docker run --name unit-$CI_COMMIT_SHA $IMAGE_TAG_CURRENT /bin/bash -c "cargo test"
  after_script:
    - docker rm -f unit-$CI_COMMIT_SHA || true
  
publish:
  stage: publish
  only:
    - master
  when: manual
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - docker run --env NPM_AUTH_TOKEN --name publish-$CI_COMMIT_SHA $IMAGE_TAG_CURRENT ./npm-ci-publish.sh
  after_script:
    - docker rm -f publish-$CI_COMMIT_SHA || true
  tags:
    - docker

publish_beta:
  stage: publish
  when: manual
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - docker run --env NPM_AUTH_TOKEN --name publish-$CI_COMMIT_SHA $IMAGE_TAG_CURRENT ./npm-ci-publish-beta-only.sh
  after_script:
    - docker rm -f publish-$CI_COMMIT_SHA || true
  tags:
    - docker
